{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/directives/dragDrop.js","js/models/finance.js","js/models/food.js","js/controllers/main.js","js/models/usda.js","js/controllers/user.js","js/models/user.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","regButtonText","go","this","LoginController","login","credentials","authenticate","provider","dragDrop","reader","FileReader","restrict","replace","scope","base64","src","link","$scope","element","active","$watchGroup","image","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","Finance","$resource","id","update","method","Food","MainController","moment","$rootScope","$window","logout","getUser","payload","getPayload","User","get","_id","main","thisUser","checkDailyGoal","secureState","toState","message","burgerOpen","isAuthenticated","name","Chart","isLoggedIn","todaysCals","caloryCounter","proteinCounter","carbCounter","fatCounter","allMyFoods","today","format","$on","Usda","$http","search","searchTerm","itemInfo","ndbno","UsersIndexController","follow","usersIndex","currentUser","following","push","$update","unfollow","i","indexOf","splice","isFollowing","filter","length","isSelf","all","query","username","angular","module","config","$inject","directive","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,6BAEbH,MAAM,eACLC,IAAK,eACLC,YAAa,8BACbC,WAAY,uCAEbH,MAAM,WACLC,IAAK,IACLC,YAAa,4BAEdF,MAAM,UACLC,IAAK,UACLC,YAAa,2BAEdF,MAAM,eACLC,IAAK,eACLC,YAAa,gCAEdF,MAAM,eACLC,IAAK,eACLC,YAAa,8BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,kBACLC,IAAK,mBACLC,YAAa,iCACbC,WAAY,+CAEbH,MAAM,iBACLC,IAAK,kBACLC,YAAa,gCACbC,WAAY,6CAEhBJ,EAAmBK,UAAU,KAI/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAE1BF,EAAcG,YAAc,GAE5BH,EAAcI,UACZC,SAAU,qBCxDd,QAASC,oBAAmBC,EAAOC,GAIjC,QAASC,KACPC,QAAQC,IAAIC,EAASC,MACrBN,EAAMO,OAAOF,EAASC,MACrBE,KAAK,WACJH,EAASI,cAAgB,aACzBR,EAAOS,GAAG,aARd,GAAML,GAAWM,IACjBN,GAASC,QACTD,EAASI,cAAgB,WASzBJ,EAASH,OAASA,EAIpB,QAASU,iBAAgBZ,EAAOC,GAG9B,QAASC,KAEPF,EAAMa,MAAMA,EAAMC,aACjBN,KAAK,WACJP,EAAOS,GAAG,YAGd,QAASK,GAAaC,GACpBhB,EAAMe,aAAaC,GAClBR,KAAK,WAEJP,EAAOS,GAAG,YAbd,GAAMG,GAAQF,IACdE,GAAMC,eAeND,EAAMX,OAASA,EACfW,EAAME,aAAeA,ECpCvB,QAASE,YAEP,GAAMC,GAAS,GAAIC,WAEnB,QACEC,SAAU,IACVC,SAAS,EACThC,YAAa,0BACbiC,OACEC,OAAQ,IACRC,IAAK,KAGPC,KATK,SASAC,EAAQC,GAEXD,EAAOH,OAAS,KAChBG,EAAOE,QAAS,EAEhBF,EAAOG,aAAa,SAAU,OAAQ,WACpCH,EAAOI,MAAQJ,EAAOH,QAAUG,EAAOF,IACvCrB,QAAQC,IAAIsB,KAGdR,EAAOa,OAAS,WACdL,EAAOH,OAASL,EAAOc,OACvBN,EAAOO,UAITN,EACGO,GAAG,YAAa,WACfR,EAAOE,QAAS,EAChBF,EAAOO,WAERC,GAAG,WAAY,SAACC,GACfA,EAAEC,mBAEHF,GAAG,YAAa,WACfR,EAAOE,QAAS,EAChBF,EAAOO,WAEVC,GAAG,OAAQ,SAACC,GACXA,EAAEC,gBACF,IAAMC,IAAQF,EAAEG,OAAOC,OAASJ,EAAEK,aAAaD,OAAO,EAGtDrB,GAAOuB,cAAcJ,OC7C7B,QAASK,SAAQC,GACf,MAAO,IAAIA,GAAU,iBAAmBC,GAAI,SAC1CC,QAAUC,OAAQ,SCFtB,QAASC,MAAKJ,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCC,QAAUC,OAAQ,SCFtB,QAASE,gBAAeC,EAAQjD,EAAOC,EAAQiD,EAAYC,GAgBzD,QAASC,KACPpD,EAAMoD,SACNnD,EAAOS,GAAG,WAKZ,QAAS2C,KACP,GAAMC,GAAUtD,EAAMuD,YACnBD,IACDE,KAAKC,KAAMb,GAAI5C,EAAMuD,aAAaG,KAAO,SAACpD,GACxCqD,EAAKC,SAAWtD,EAChBuD,mBASN,QAASC,GAAY3B,EAAG4B,GACtBJ,EAAKK,QAAU,KACfL,EAAKM,YAAa,EACdjE,EAAMkE,mBAAsC,YAAjBH,EAAQI,OACrChC,EAAEC,iBACFnC,EAAOS,GAAG,WACViD,EAAKK,QAAU,kCA1CnB,GAAML,GAAOhD,IACCwC,GAAQiB,KAEtBT,GAAKU,WAAarE,EAAMkE,gBACxBP,EAAKK,QAAU,KACfL,EAAKW,WAAaA,WAClBX,EAAKY,cAAgB,EACrBZ,EAAKa,eAAiB,EACtBb,EAAKc,YAAc,EACnBd,EAAKe,WAAa,EAClBf,EAAKgB,cACLhB,EAAKiB,MAAQ3B,IAAS4B,OAAO,cAE7BlB,EAAKC,SAAW,KAOhBD,EAAKP,OAASA,EAYdC,GAeAH,GAAW4B,IAAI,oBAAqBhB,GChDtC,QAASiB,MAAKC,GACZ,OACEC,OAAQ,SAACC,GACP,MAAOF,IACLlC,OAAQ,MACR1D,IAAAA,YAAiB8F,KAGrBC,SAAU,SAACC,GACT,MAAOJ,IACLlC,OAAQ,MACR1D,IAAAA,iBAAsBgG,MCV9B,QAASC,sBAAqB7B,EAAMxD,GAiBlC,QAASsF,GAAOhF,GACdiF,EAAWC,YAAYC,UAAUC,KAAKpF,GACtCiF,EAAWC,YAAYG,QAAQ,WAC7BxF,QAAQC,IAAI,cAIhB,QAASwF,GAAStF,GAChB,GAAMuF,GAAIN,EAAWC,YAAYC,UAAUK,QAAQxF,EAAKoD,IACrDmC,MAAM,IACPN,EAAWC,YAAYC,UAAUM,OAAOF,EAAG,GAC3CN,EAAWC,YAAYG,QAAQ,WAC7BxF,QAAQC,IAAI,sCAKlB,QAAS4F,GAAY1F,GACnB,MAAOiF,GAAWC,YAAYC,UAAUQ,OAAO,SAACrD,GAC9C,MAAOA,KAAOtC,EAAKoD,MAClBwC,OAGL,QAASC,GAAO7F,GACd,MAAOA,GAAKoD,MAAQ6B,EAAWC,YAAY9B,IAxC7C,GAAM6B,GAAa5E,IAGnB4E,GAAW3B,SAQXJ,EAAKC,KAAMb,GAAI5C,EAAMuD,aAAaG,KAAO,SAACpD,GACxCiF,EAAWC,YAAclF,EACzBiF,EAAWa,IAAM5C,EAAK6C,UA8BxBd,EAAWY,OAASA,EACpBZ,EAAWS,YAAcA,EAEzBT,EAAWD,OAASA,EACpBC,EAAWK,SAAWA,EACtBL,EAAWU,QAAWK,SAAU,IClDlC,QAAS9C,MAAKb,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCC,QAAUC,OAAQ,SRNtByD,QACGC,OAAO,WAAY,aAAc,YAAa,aAAc,kBAC5DC,OAAOzH,QACPyH,OAAOjH,MAEVR,OAAO0H,SAAW,iBAAkB,sBAgDpClH,KAAKkH,SAAW,iBCrDhBH,QAAQC,OAAO,WACZlH,WAAW,qBAAsBS,oBACjCT,WAAW,kBAAmBsB,iBAEjCb,mBAAmB2G,SAAW,QAAS,UAgBvC9F,gBAAgB8F,SAAW,QAAS,UCpBpCH,QAAQC,OAAO,WACZG,UAAU,WAAY1F,UCDzBsF,QAAQC,OAAO,WACZI,QAAQ,UAAWlE,SAEtBA,QAAQgE,SAAW,aCHnBH,QAAQC,OAAO,WACZI,QAAQ,OAAQ7D,MAEnBA,KAAK2D,SAAW,aCHhBH,QAAQC,OAAO,WACdlH,WAAW,iBAAkB0D,gBAE9BA,eAAe0D,SAAW,SAAU,OAAQ,QAAS,SAAU,aAAc,WCH7EH,QAAQC,OAAO,WACZI,QAAQ,OAAQ7B,MAEnBA,KAAK2B,SAAW,SCFhBH,QAAQC,OAAO,WACdlH,WAAW,uBAAwB+F,sBAEpCA,qBAAqBqB,SAAW,OAAQ,SCJxCH,QAAQC,OAAO,WACZI,QAAQ,OAAQpD,MAEnBA,KAAKkD,SAAW","file":"app.js","sourcesContent":["angular\n  .module('foodApp', ['ngResource', 'ui.router', 'satellizer', 'angularMoment'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('foodsIndex', {\n      url: '/foods',\n      templateUrl: '/templates/foodsindex.html',\n      controller: 'FoodsController as foods'\n    })\n    .state('leaderboard', {\n      url: '/leaderboard',\n      templateUrl: '/templates/leaderboard.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('landing', {\n      url: '/',\n      templateUrl: '/templates/landing.html'\n    })\n    .state('select', {\n      url: '/select',\n      templateUrl: '/templates/select.html'\n    })\n    .state('dietProfile', {\n      url: '/dietProfile',\n      templateUrl: '/templates/dietProfile.html'\n    })\n    .state('dietFriends', {\n      url: '/dietFriends',\n      templateUrl: '/templates/dietFriends.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('finances', {\n      url: '/finances',\n      templateUrl: '/templates/finances.html',\n      controller: 'FinancesController as finances'\n    })\n    .state('picturesBefore', {\n      url: '/pictures/before',\n      templateUrl: '/templates/picturesBefore.html',\n      controller: 'PicturesBeforeController as picturesBefore'\n    })\n    .state('picturesAfter', {\n      url: '/pictures/after',\n      templateUrl: '/templates/picturesAfter.html',\n      controller: 'PicturesAfterController as picturesAfter'\n    });\n  $urlRouterProvider.otherwise('/');\n}\n\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n\n  $authProvider.tokenPrefix = '';\n\n  $authProvider.facebook({\n    clientId: '1308530975838362'\n  });\n\n}\n","angular.module('foodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  register.regButtonText = 'Register';\n  function submit() {\n    console.log(register.user);\n    $auth.signup(register.user)\n    .then(() => {\n      register.regButtonText = 'Registered';\n      $state.go('landing');\n    });\n  }\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    // console.log(login.credentials);\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('select');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then(() => {\n      // console.log(res);\n      $state.go('select');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('foodApp')\n  .directive('dragDrop', dragDrop);\n\nfunction dragDrop() {\n\n  const reader = new FileReader();\n\n  return {\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '=',\n      src: '='\n    },\n\n    link($scope, element) {\n\n      $scope.base64 = null;\n      $scope.active = false;\n\n      $scope.$watchGroup(['base64', 'src'], () => {\n        $scope.image = $scope.base64 || $scope.src;\n        console.log($scope);\n      });\n\n      reader.onload = () => {\n        $scope.base64 = reader.result;\n        $scope.$apply();\n\n      };\n\n      element\n        .on('dragenter', () => {\n          $scope.active = true;\n          $scope.$apply();\n        })\n        .on('dragover', (e) => {\n          e.preventDefault();\n        })\n        .on('dragleave', () => {\n          $scope.active = false;\n          $scope.$apply();\n        })\n      .on('drop', (e) => {\n        e.preventDefault();\n        const file = (e.target.files || e.dataTransfer.files)[0];\n\n\n        reader.readAsDataURL(file);\n      });\n    }\n  };\n}\n","angular.module('foodApp')\n  .factory('Finance', Finance);\n\nFinance.$inject = ['$resource'];\nfunction Finance($resource) {\n  return new $resource('/finances/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n  .factory('Food', Food);\n\nFood.$inject = ['$resource'];\nfunction Food($resource) {\n  return new $resource('/foods/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('foodApp')\n.controller('MainController', MainController);\n\nMainController.$inject = ['moment', 'User', '$auth', '$state', '$rootScope', '$window'];\nfunction MainController(moment, $auth, $state, $rootScope, $window) {\n  const main = this;\n  const Chart = $window.Chart;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  main.todaysCals = todaysCals;\n  main.caloryCounter = 0;\n  main.proteinCounter = 0;\n  main.carbCounter = 0;\n  main.fatCounter = 0;\n  main.allMyFoods = [];\n  main.today = moment().format('DD/MM/YYYY');\n\n  main.thisUser = null;\n\n  function logout() {\n    $auth.logout();\n    $state.go('landing');\n  }\n\n  main.logout = logout;\n\n  function getUser() {\n    const payload = $auth.getPayload();\n    if(payload) {\n      User.get({ id: $auth.getPayload()._id }, (user) => {\n        main.thisUser = user;\n        checkDailyGoal();\n      });\n    }\n  }\n\n  getUser();\n\n  let days = [];\n\n  function secureState(e, toState) {\n    main.message = null;\n    main.burgerOpen = false;\n    if(!$auth.isAuthenticated() && toState.name !== 'landing') {\n      e.preventDefault();\n      $state.go('landing');\n      main.message = 'You need to login to see that!';\n\n    }\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  //function to populate a MONTHS worth of objects with dates and calories. they will update each day.\n\n\n\n\n\n}\n","angular.module('foodApp')\n  .factory('Usda', Usda);\n\nUsda.$inject = ['$http'];\nfunction Usda($http) {\n  return {\n    search: (searchTerm) => {\n      return $http({\n        method: 'GET',\n        url: `/usdas?q=${searchTerm}`\n      });\n    },\n    itemInfo: (ndbno) => {\n      return $http({\n        method: 'GET',\n        url: `/usdasi?ndbno=${ndbno}`\n      });\n    }\n  };\n}\n","\nangular.module('foodApp')\n.controller('UsersIndexController', UsersIndexController);\n\nUsersIndexController.$inject = ['User', '$auth'];\nfunction UsersIndexController(User, $auth ) {\n  const usersIndex = this;\n\n\n  usersIndex.thisUser;\n  // function getThisUser(){\n  //   User.get({ id: $auth.getPayload()._id }, ((user) => {\n  //     console.log('this one here!!!', user);\n  //     return user;\n  //   }));\n  // }\n\n  User.get({ id: $auth.getPayload()._id }, (user) => {\n    usersIndex.currentUser = user;\n    usersIndex.all = User.query();\n  });\n\n  function follow(user) {\n    usersIndex.currentUser.following.push(user);\n    usersIndex.currentUser.$update(() => {\n      console.log('user @\\'d');\n    });\n  }\n\n  function unfollow(user) {\n    const i = usersIndex.currentUser.following.indexOf(user._id);\n    if(i !== -1) {\n      usersIndex.currentUser.following.splice(i, 1);\n      usersIndex.currentUser.$update(() => {\n        console.log('I can\\'t belive you\\'ve done this');\n      });\n    }\n  }\n\n  function isFollowing(user) {\n    return usersIndex.currentUser.following.filter((id) => {\n      return id === user._id;\n    }).length;\n  }\n\n  function isSelf(user) {\n    return user._id === usersIndex.currentUser._id;\n  }\n\n  usersIndex.isSelf = isSelf;\n  usersIndex.isFollowing = isFollowing;\n\n  usersIndex.follow = follow;\n  usersIndex.unfollow = unfollow;\n  usersIndex.filter = { username: '' };\n\n}\n","angular.module('foodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n"]}